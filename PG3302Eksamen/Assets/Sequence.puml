@startuml

actor User 
participant UI
participant Controller
participant Repository
database Database

group Program
group RegisterPerson
User -> UI : Create user
activate UI
UI -> Controller : Get user information
activate Controller
Controller -> Repository : Validate user information
activate Repository
activate Database

alt SocialSecNum does not exist
Repository -> Database : Verify and add new user 
Controller <-- Database : SocialSecNum approved
UI <-- Controller : Create user result message
User <-- UI : New user success
else SocialSecNum does exist
Repository -> Database : Deny new user
Controller <-- Database  : SocialSecNum already exist, not approved
deactivate Database
deactivate Repository
UI <-- Controller : Create user result message
deactivate Controller
User <-- UI : New user failed
end
end

group Log-In
User -> UI : Log in
UI -> Controller : Commit user information
activate Controller
Controller -> Repository : Authorize
activate Repository
Repository -> Database : Validate and approve
activate Database

alt Correct SocialSecNum
Controller <-- Database : Return approval
Controller -> UI : Access approved
else Wrong SocialSecNum
Controller <-- Database : Return denial
deactivate Database
deactivate Repository
UI <-- Controller : Access denied message
deactivate Controller
User <-- UI : User log-in failed

alt Correct password
activate Database
activate Repository
Controller <-- Database : Return approval
activate Controller
UI <-- Controller : Access approved message
User <-- UI : User log-in success
else Wrong password
Controller <-- Database : Return denial
deactivate Database
deactivate Repository
UI <-- Controller : Access denied message
deactivate Controller
User <-- UI : User log-in failed
end
end
end


User -> UI : BC menu

group Receive account information
UI -> Database : Get account information
Database --> UI: Return account information
end

group Receive transactions
UI -> Database : Get transactions 
Database --> UI: Return transactions 
end

group Receive balance on all accounts
UI -> Database : Get balance decimal
Database --> UI: Return balance decimal
end

group Payment
User -> UI : Add payment credentials
UI -> Controller : Set bill object
Controller -> Repository : Generate bill object
Repository -> Database : Add bill object to database
end

group CreateAccount
User -> UI : Add account credentials
UI -> Controller : Set account object
Controller -> Repository : Generate Account object
Repository -> Database : Add account object to database
end

end


@enduml