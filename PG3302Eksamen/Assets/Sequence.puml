@startuml

actor User 
participant UI
participant Controller
participant Repository
database Database

group Program
group RegisterPerson
User -> UI : Create user
activate UI
UI -> Controller : Get user information
activate Controller
Controller -> Repository : Validate user information
activate Repository
activate Database

alt SocialSecNum does not exist
Repository -> Database : Verify and add new user 
Controller <-- Database : SocialSecNum approved
UI <-- Controller : Create user result message
User <-- UI : New user success
else SocialSecNum does exist
Repository -> Database : Deny new user
Controller <-- Database  : SocialSecNum already exist, not approved
deactivate Database
deactivate Repository
UI <-- Controller : Create user result message
deactivate Controller
User <-- UI : New user failed
end
end

group Log-In
User -> UI : Log in
UI -> Controller : Commit user information
activate Controller
Controller -> Repository : Authorize
activate Repository
Repository -> Database : Validate and approve
activate Database

alt Correct SocialSecNum
Controller <-- Database : Return approval
Controller -> UI : Access approved

else Wrong SocialSecNum
Controller <-- Database : Return denial
UI <-- Controller : Access denied message
User <-- UI : User log-in failed

alt Wrong password
Controller <-- Database : Return denial
UI <-- Controller : Access denied message
User <-- UI : User log-in failed

else Correct password
Controller <-- Database : Return approval
deactivate Repository
deactivate Database
UI <-- Controller : Access approved message
deactivate Controller
User <-- UI : User log-in success

group MainMenu

group Payment
User -> UI : Add payment credentials
UI -> Controller : Choose bill object
activate Controller
Controller -> Repository : Get bill object
activate Repository
Repository -> Database : Update bill object to database
activate Database
Database --> Repository : Bill status = Paid
deactivate Database
Repository --> Controller : Bill status = Paid
deactivate Repository
Controller --> UI : Bill status = Paid
deactivate Controller
end

group CreateAccount
User -> UI : Choose account type
User -> UI : Choose account name

alt SavingsAccount
UI -> Controller : SavingsAccountFactory.Initialize
activate Controller
Controller -> Repository : Insert SavingsAccount
activate Repository
Repository -> Database : Add SavingsAccount to database
activate Database
Database --> Repository : SavingsAccount added
deactivate Database
Repository --> Controller : SavingsAccount added
deactivate Repository
Controller --> UI : SavingsAccount added
deactivate Controller
end

alt CurrentAccount
UI -> Controller : CurrentAccountFactory.Initialize
activate Controller
Controller -> Repository : Insert CurrentAccount
activate Repository
Repository -> Database : Add CurrentAccount to database
activate Database
Database --> Repository : CurrentAccount added
deactivate Database
Repository --> Controller : CurrentAccount added
deactivate Repository
Controller --> UI : CurrentAccount added
deactivate Controller
end
end

group Display accounts
User -> UI : Display accounts
UI -> Database : Get account information
/'For å vise loop, det loopes også i de andre display metodene.'/
loop _accountRepository.GetSortedByOwner(_person.Id).ToList()
activate Database
activate Repository
activate Controller
Database --> UI: Return account information
deactivate Controller
deactivate Repository
deactivate Database
end

group Display transactions
User -> UI : Display transactions
UI -> Database : Get transactions 
activate Database
activate Repository
activate Controller
Database --> UI: Return transactions 
deactivate Controller
deactivate Repository
deactivate Database
end

group Display bills
User -> UI : Display bills
UI -> Database : Get bills
activate Database
activate Repository
activate Controller
Database --> UI: Return bills
deactivate Controller
deactivate Repository
deactivate Database
end

group Display user details
User -> UI : Display user details
UI -> Database : Get user details
activate Database
activate Repository
activate Controller
Database --> UI: Return user details
deactivate Controller
deactivate Repository
deactivate Database
end


end
end
end
end
end


@enduml